---

# tasks file for roles/deploy_vms

# - name: "Deploy es servers"
- name: "Deploy es servers"
  community.general.proxmox_kvm:
    api_user: "{{api_user}}"
    api_password: "{{api_pass}}"
    api_host: "{{api_host}}"
    clone: "blah"
    vmid: "{{es_template_id}}"
    name: "{{item.name}}"
    node: "{{vm_node}}"
    memory: "{{vm_memory}}"
    timeout: 60
    state: "present"
  loop:
    "{{vms}}"
  when: item.type == 'es'
  tags:
    - delpoy_vms
    - create

- name: "Deploy kib servers"
  community.general.proxmox_kvm:
    api_user: "{{ api_user }}"
    api_password: "{{ api_pass }}"
    api_host: "{{ api_host }}"
    clone: "blah"
    vmid: "{{ kib_template_id }}"
    name: "{{ item.name }}"
    node: "{{ vm_node }}"
    memory: "{{ vm_memory }}"
    timeout: 60
    state: "present"
  loop:
    "{{ vms }}"
  when: item.type == 'kib'
  tags:
    - delpoy_vms
    - create

- name: Shutdown Proxmox VM's
  community.general.proxmox_kvm:
    api_user: '{{ api_user }}'
    api_password: '{{ api_pass }}'
    api_host: '{{ api_host }}'
    name: '{{ item.name }}'
    node: '{{ vm_node }}'
    state: 'stopped'
    timeout: 60
  loop:
    "{{ vms }}"
  tags:
    - destroy
    - shutdown
  ignore_errors: true

- name: Sleep for 300 seconds and continue with play
  ansible.builtin.wait_for:
    timeout: 10
  tags:
    - destroy

- name: Destroy Proxmox VM's
  community.general.proxmox_kvm:
    api_user: '{{ api_user }}'
    api_password: '{{ api_pass }}'
    api_host: '{{ api_host }}'
    name: '{{ item.name }}'
    node: '{{ vm_node }}'
    state: 'absent'
  loop:
    "{{ vms }}"
  tags:
    - destroy

- name: Get Facts
  community.general.proxmox_kvm:
    api_user: '{{ api_user }}'
    api_password: '{{ api_pass }}'
    api_host: '{{ api_host }}'
    node: '{{ vm_node }}'
    name: '{{ item.name }}'
    validate_certs: false
    state: current
  loop:
    "{{ vms }}"
  register: hostinfo
  tags:
    - delpoy_vms
    - create

- name: Remove existing template nic
  community.general.proxmox_nic:
    api_user: '{{ api_user }}'
    api_password: '{{ api_pass }}'
    api_host: '{{ api_host }}'
    name: '{{ item.name }}'
    interface: '{{ item.interface }}'
    state: 'absent'
  loop:
    "{{ vms }}"
  when:
    item.mac not in item.mac
  tags:
    - create
    - delpoy_vms

- name: Replace interface with predefined MAC
  community.general.proxmox_nic:
    api_user: '{{ api_user }}'
    api_password: '{{ api_pass }}'
    api_host: '{{ api_host }}'
    name: '{{ item.name }}'
    interface: '{{ item.interface }}'
    bridge: '{{ item.bridge }}'
    mac: '{{ item.mac }}'
    state: 'present'
  loop:
    "{{ vms }}"
  tags:
    - create
    - delpoy_vms

- name: Add data disks to es nodes (Do not overwrite if it already exists)
  community.general.proxmox_disk:
    api_user: '{{ api_user }}'
    api_password: '{{ api_pass }}'
    api_host: '{{ api_host }}'
    name: '{{ item.name }}'
    disk: scsi3
    backup: true
    cache: none
    storage: local-lvm
    size: 30
    state: present
  loop:
    "{{ vms }}"

- name: Power on VM's
  community.general.proxmox_kvm:
    api_user: '{{ api_user }}'
    api_password: '{{ api_pass }}'
    api_host: '{{ api_host }}'
    name: '{{ item.name }}'
    node: '{{ vm_node }}'
    state: 'started'
  loop:
    "{{ vms }}"
  tags:
    - create
    - delpoy_vms
