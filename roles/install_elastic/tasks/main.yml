---
# tasks file for elasticsearch

- name: "Wait for SSH"
  ansible.builtin.wait_for_connection:
  tags:
    - create

- name: "Import elastic rpm key"
  ansible.builtin.rpm_key:
    state: 'present'
    key: 'https://artifacts.elastic.co/GPG-KEY-elasticsearch'
  tags:
    - create

- name: "Download and install block"
  block:
    - name: Print installer download locations
      ansible.builtin.debug:
        msg: "Downloading from: >{{ es_installer_url }}< To: >{{ tmp_dir }}/elasticsearch-{{ es_version }}.rpm<"
      tags:
        - create

    - name: "Check if file has already been downloaded"
      ansible.builtin.stat:
        path: "{{ tmp_dir }}/elasticsearch-{{ es_version }}.rpm"
      register: es_file_exist
      tags:
        - create

    - name: "Download installer"
      ansible.builtin.get_url:
        url: "{{ es_installer_url }}"
        dest: "{{ tmp_dir }}/elasticsearch-{{ es_version }}.rpm"
        mode: '0440'
        # creates: '{{ tmp_dir }}/elasticsearch-{{ es_version }}.rpm'
        validate_certs: false
      # when: "{{tmp_dir}}/elasticsearch.rpm.stat.exists" == false
      tags:
        - create

    - name: "Download sha512"
      ansible.builtin.get_url:
        url: "{{ es_installer_sha_url }}"
        dest: "{{ tmp_dir }}/elasticsearch-{{ es_version }}.sha512"
        mode: '0440'
      tags:
        - create

    - name: "Get sha256 sum of downloaded installer"
      ansible.builtin.stat:
        path: "{{ tmp_dir }}/elasticsearch-{{ es_version }}.rpm"
        checksum_algorithm: sha512
        get_checksum: true
      register: file_stat
      tags:
        - create

    - name: "Register file hash"
      ansible.builtin.shell:
        cmd: "cat {{ tmp_dir }}/elasticsearch-{{ es_version }}.sha512 | awk '{print $1}'"
      register: file_hash
      tags:
        - create

    - name: "Print hashes"
      ansible.builtin.debug:
        msg: "File Contents: >{{ file_hash.stdout }}< File Hash >{{ file_stat.stat.checksum }}<"
      tags:
        - create

    - name: "Verify sha512sum of download before execution"
      ansible.builtin.fail:
        msg: "Failure, file is not correct."
      when: file_stat.stat.checksum != file_hash.stdout and inventory_hostname in groups['data_nodes'] + groups['master_nodes'] + groups['ml_nodes']
      tags:
        - create
  when: inventory_hostname in groups['data_nodes'] + groups['master_nodes'] + groups['ml_nodes']
 

#- name: "Disable IPV6"
#  ansible.posix.sysctl:
#    name: "{{ item.setting }}"
#    value: "{{ item.value }}"
#    sysctl_set: true
#  loop:
#    - { setting: 'net.ipv6.conf.all.disable_ipv6', value: '1' }
#    - { setting: 'net.ipv6.conf.default.disable_ipv6', value: '1' }
#    - { setting: 'net.ipv6.conf.lo.disable_ipv6', value: '1' }
#    - { setting: 'net.ipv6.conf.ens18.disable_ipv6', value: '1'} # ens18 is the interface name on the VM.  Should be defined as a var.
#  tags:
#    - create

#- name: "Stop and disable firewalld"
#  ansible.builtin.service:
#    name: "firewalld"
#    state: "stopped"
#    enabled: false
#  tags:
#    - create

- name: "Install elastic package"
  ansible.builtin.yum:
    name: "{{ tmp_dir }}/elasticsearch-{{ es_version }}.rpm"
    state: present
  register: install_out
  when: inventory_hostname in groups['data_nodes'] + groups['master_nodes'] + groups['ml_nodes']
  tags:
    - create

- name: "Deploy elasticsearch.yml Jinja2 template"
  ansible.builtin.template:
    backup: true
    src: "elasticsearch.yml.j2"
    dest: "/etc/elasticsearch/elasticsearch.yml"
    owner: "root"
    group: "elasticsearch"
  when: inventory_hostname in groups['data_nodes'] + groups['master_nodes'] + groups['ml_nodes']
  tags:
    - create
    - debug

- name: "Ensure certs directory exists on ES servers"
  ansible.builtin.file:
    path: "{{ es_cert_dir }}"
    state: "directory"
    owner: "root"
    group: "elasticsearch"
    mode: "0770"
    recurse: yes
  tags:
    - create
    - certs
  when: inventory_hostname in groups['data_nodes'] + groups['master_nodes'] + groups['ml_nodes']

- name: "Store certificate password in xpack stores"
  ansible.builtin.shell:
    cmd: "echo {{ TLS_Pass }} | /usr/share/elasticsearch/bin/elasticsearch-keystore add {{ item }} -fx"
  with_items:
    - "{{ 'xpack.security.transport.ssl.keystore.secure_password' }}"
    - "{{ 'xpack.security.transport.ssl.truststore.secure_password' }}"
    - "{{ 'xpack.security.http.ssl.keystore.secure_password' }}"
  when: inventory_hostname in groups['data_nodes'] + groups['master_nodes'] + groups['ml_nodes']
  tags:
    - create
    - certs

- name: "Set JVM Options"
  ansible.builtin.lineinfile:
    path: /etc/elasticsearch/jvm.options
    line: '{{ item.line }}'
  when: inventory_hostname in groups['data_nodes'] + groups['master_nodes'] + groups['ml_nodes']
  loop:
    - { line: '-Djava.net.preferIPv4Stack=true' }
  tags:
    - create

- name: "Enable elasticsearch"
  ansible.builtin.systemd:
    enabled: true
    name: "elasticsearch.service"
  when: inventory_hostname in groups['data_nodes'] + groups['master_nodes'] + groups['ml_nodes']
  tags:
    - create

#- name: "Start elasticsearch"
#  ansible.builtin.systemd:
#    state: restarted
#    name: elasticsearch.service
#  when: inventory_hostname in groups['data_nodes'] + groups['master_nodes'] + groups['ml_nodes']
#  tags:
#    - create
